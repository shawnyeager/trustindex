name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: trust
      POSTGRES_USER: trust
      POSTGRES_PASSWORD: trust
      POSTGRES_URL: postgres://trust:trust@localhost:5432/trust
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Start services (db, redis, minio, api)
        run: docker compose up -d --build

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -d $POSTGRES_DB -U $POSTGRES_USER && break
            sleep 1
          done

      - name: Apply DB migration
        run: psql $POSTGRES_URL -f db/migrations/000_init.sql

      - name: Seed countries
        run: psql $POSTGRES_URL -f db/seed/seed_countries.sql

      - name: Install ETL deps
        run: pip install -r etl/requirements.txt

      - name: Normalize example CPI + WGI
        run: |
          python -m etl.jobs.cpi --year 2024 --input data/reference/example_cpi.csv --out data/staging
          python -m etl.jobs.wgi --year 2024 --input data/reference/example_wgi.csv --out data/staging

      - name: Load CPI + WGI to Postgres
        run: |
          python -m etl.jobs.load_cpi_to_db --year 2024 --csv data/staging/cpi_2024.csv
          python -m etl.jobs.load_wgi_to_db --year 2024 --csv data/staging/wgi_2024.csv

      - name: Compute governance rows
        run: python -m etl.pipelines.compute_governance_to_db --year 2024

      - name: Wait for API
        run: |
          for i in {1..60}; do
            curl -fsS http://localhost:8000/api/methodology && break || true
            sleep 1
          done

      - name: Run smoke tests
        run: python scripts/smoke_test.py

